// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url  	    = env("DATABASE_URL")
}

model User {
  id         String   @default(uuid())
  sex        String
  licenseSup String   @id @unique
  name       String
  lastName   String
  phone      String
  taxpayer   String   @unique
  email      String   @unique
  password   String
  role       String
  status     String
  dateBirth  DateTime
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
  benefits Benefit[] @relation("UserBenefit")
}

model Truck {
  id         String  @default(uuid())
  brand      String
  model      String
  paint      String
  year       Int
  plate      String   @id @unique
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
  benefits Benefit[] @relation("TruckBenefit")
}

model Transporter {
  id            String  @default(uuid())
  name          String
  lastName      String
  phone         String
  taxpayer      String   @id @unique
  dateBirth     DateTime
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
  benefits Benefit[] @relation("TransporterBenefit")
}

model Company {
  id         String   @default(uuid())
  name       String   @unique
  business   String   @id @unique
  phone      String
  email      String   @unique
  city       String
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
  benefits Benefit[] @relation("CompanyBenefit")
}

model Professional {
  id                String @default(uuid())
  sex               String
  name              String
  lastName          String
  phone             String  
  taxpayer          String @unique
  email             String @unique
  license           String @id @unique
  role              String
  status            String
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt
  benefits Benefit[] @relation("ProfessionalBenefit")
}

model Benefit {
  id                          String   @id @default(uuid())
  
  licenseSupBef               String  // id unico de usuarios del sistema
  license                     String  // id unico de profesionales
  placa                       String  // id unico de camiones
  business                    String  // id unico de empresas
  taxpayer                    String  // id unico de conductores

  idRemision                  String   @unique
  idPlanSanitario             String
  regionProcedencia           String
  granja                      String
  galpon                      String
  lineaAves                   String
  sexo                        String
  edad                        Int
  horaBeneficio               DateTime
  turnoBeneficio              Int

  pesoPromedioAveGranja       Decimal @default(0) @db.Decimal(6,3)
  avesPorGuacal               Int @default(0)
  guacalesVacios              Int @default(0)
  guacalesUsados              Int @default(0)
  guacalExtra                 Int @default(0)
  avesRemisionadas            Int @default(0)
  avesEnGuacalExtra           Int @default(0)

  avesColgadas                Int @default(0)
  avesAsfixiadas              Int @default(0)
  canalesDecomisadas          Int @default(0)
  canalesDestrozadas          Int @default(0)

  peso1GuacalVacio            Decimal @default(0) @db.Decimal(6,3)
  pesoTorre7Guacales          Decimal @default(0) @db.Decimal(6,3)
  pesoPromedioAvePlanta       Decimal @default(0) @db.Decimal(6,3)
  diferencialPesoGranjaPlanta Decimal @default(0) @db.Decimal(6,3)
  pesoTonLoteProcesada        Decimal @default(0) @db.Decimal(6,3)
  canalesObtenidas            Int @default(0)
  diferencialAvesEntrega      Int @default(0)
  createdAt                   DateTime @default(now())
  updatedAt                   DateTime @updatedAt
  
  user         User         @relation("UserBenefit", fields: [licenseSupBef], references: [licenseSup])
  truck        Truck        @relation("TruckBenefit", fields: [placa], references: [plate])
  transporter  Transporter  @relation("TransporterBenefit", fields: [taxpayer], references: [taxpayer])
  company      Company      @relation("CompanyBenefit", fields: [business], references: [business])
  professional Professional @relation("ProfessionalBenefit", fields: [license], references: [license])

  @@map("benefits")
}

